import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
TOKEN = "8397235255:AAHIC3lzoSTaP9fJBA0cIJ9JcOHQ2_xZhnA"  
SUPPORT_USERNAME = os.getenv("SUPPORT_USERNAME", "#Poderzkabotainzenernayamysl")  
CHANNEL_LINK = os.getenv("CHANNEL_LINK", "https://t.me/hizackuaeu")
def main_menu_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üéì –ö—É–ø–∏—Ç—å –∫—É—Ä—Å", callback_data="BUY")],
        [InlineKeyboardButton("üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=f"https://t.me/{SUPPORT_USERNAME}")],
        [InlineKeyboardButton("üì£ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=CHANNEL_LINK)]
    ])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚úÖ –ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç –Ω–∞ —Å–≤—è–∑–∏. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu_kb())

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ö–æ–º–∞–Ω–¥—ã: /start, /help", reply_markup=main_menu_kb())

async def on_cb(update: Update, context: ContextTypes.DEFAULT_TYPE):
    q = update.callback_query
    await q.answer()
    if q.data == "BUY":
        await q.edit_message_text(
            "–¢—É—Ç –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –∫—É—Ä—Å–æ–≤ (–ø–æ–∑–∂–µ –¥–æ–±–∞–≤–∏–º –æ–ø–ª–∞—Ç—É).",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="BACK_HOME")]])
        )
    elif q.data == "BACK_HOME":
        await q.edit_message_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu_kb())

def main():
    if not TOKEN:
        raise SystemExit("–ù–µ –Ω–∞–π–¥–µ–Ω TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(CallbackQueryHandler(on_cb))
    print("üöÄ Bot started (polling)‚Ä¶")
    app.run_polling(close_loop=False)

if __name__ == "__main__":
    main()